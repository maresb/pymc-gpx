[build-system]
requires = ["hatchling >=1.25.0,<2", "hatch-vcs >=0.4,<0.5"]
build-backend = "hatchling.build"

[project]
name = "pymc-gpx"
dynamic = ["version"]
description = "Unstable and experimental new Gaussian Process implementation for PyMC"
readme = "README.md"
requires-python = ">=3.10"
license = "Apache-2.0"
keywords = []
authors = [
  { name = "Ben Mares", email = "services-git-throwaway1@tensorial.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: Apache Software License",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Operating System :: OS Independent",
]
dependencies = ["pymc >=5"]

[project.urls]
Documentation = "https://github.com/maresb/pymc-gpx#readme"
Issues = "https://github.com/maresb/pymc-gpx/issues"
Source = "https://github.com/maresb/pymc-gpx"

[tool.hatch.build.targets.wheel]
packages = ["src/gpx"]

[tool.hatch.version]
source = "vcs"
tag-pattern = '''^v(\d+\.\d+\.\d+)$'''
raw-options = { version_scheme = "no-guess-dev" }

[tool.hatch.build.hooks.vcs]
version-file = "src/gpx/_version.py"

[tool.ruff]
line-length = 100
src = ["src"]
target-version = "py310"

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # Pyflakes
  "I",   # isort
  "C4",  # flake8-comprehensions
  "B",   # flake8-bugbear
  "UP",  # pyupgrade
  "RUF", # Ruff-specific rules
  "TID", # flake8-tidy-imports
  "BLE", # flake8-blind-except
  "PTH", # flake8-pathlib
  "A",   # flake8-builtins
]
ignore = [
  "C408", # unnecessary-collection-call (allow dict(a=1, b=2); clarity over speed!)
  # The following list is recommended to disable these when using ruff's formatter.
  # (Not all of the following are actually enabled.)
  "W191",   # tab-indentation
  "E111",   # indentation-with-invalid-multiple
  "E114",   # indentation-with-invalid-multiple-comment
  "E117",   # over-indented
  "D206",   # indent-with-spaces
  "D300",   # triple-single-quotes
  "Q000",   # bad-quotes-inline-string
  "Q001",   # bad-quotes-multiline-string
  "Q002",   # bad-quotes-docstring
  "Q003",   # avoidable-escaped-quote
  "COM812", # missing-trailing-comma
  "COM819", # prohibited-trailing-comma
  "ISC001", # single-line-implicit-string-concatenation
  "ISC002", # multi-line-implicit-string-concatenation
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.mypy]
no_implicit_optional = true
check_untyped_defs = true
strict_equality = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
plugins = ["numpy.typing.mypy_plugin"]
mypy_path = "src/"
packages = ["gpx"]

[[tool.mypy.overrides]]
module = "gpx.old.*"
ignore_errors = true

[tool.pytest.ini_options]
addopts = "-vv --doctest-modules"
testpaths = ["tests"]
